# Based on SmartLiving-Rocks tado blueprint
blueprint:
  name: Homematic IP Cloud Evo Thermostat Window Control
  description:
    An automation that "switches off" a Homematic IP Evo thermostat via cloud connection when a window sensor is open for a certain time.
    It waits until the window is closed again to resume the previously set temperature.
  domain: automation
  input:
    window_entity:
      name: Window Sensor
      description: The window sensor that controls the climate entity.
      selector:
        entity:
          filter:
            - domain: binary_sensor
            - device_class: window
    minimum_open_time:
      name: Miniumum time the window is open
      description: Time in seconds to wait until the automation is triggered
      default: 12
      selector:
        number:
          min: 0.0
          max: 120.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    climate_target:
      name: Climate Device
      description: The climate entity that is controlled by the window sensor.
      selector:
        entity:
          filter:
            - domain: climate
    master_sensor:
      name: Master switch (optional)
      description: If a input_boolean exists that centrally controls all climate instances, it can be specified and recognised here.
      default: ""
      selector:
        entity:
          filter:
            domain: input_boolean
  source_url: "https://raw.githubusercontent.com/didiatworkz/homeassistant-blueprints/main/homematic%20_ip_cloud_evo_thermostat_window_control.yaml"
trigger:
  - platform: state
    entity_id: !input "window_entity"
    to: "on"
    for: !input "minimum_open_time"
variables:
  climate_name: !input "climate_target"
  master_sensor: !input "master_sensor"
condition:
  - condition: not
    conditions:
      - condition: state
        entity_id: !input "climate_target"
        state: "off"
action:
  - choose:
      - conditions:
          - "{{ master_sensor|length > 0 and not is_state(master_sensor, 'on') }}"
        sequence:
          - stop: Master not active
  - service: scene.create
    data:
      scene_id: "{{ climate_name | replace('climate.', '') }}_window_snapshot"
      snapshot_entities: !input "climate_target"
  - service: climate.set_temperature
    data:
      temperature: 5
    entity_id: !input "climate_target"
  - wait_for_trigger:
      - platform: state
        entity_id: !input "window_entity"
        to: "off"
    continue_on_timeout: false
  - service: scene.turn_on
    data:
      entity_id: "scene.{{ climate_name | replace('climate.', '') }}_window_snapshot"
  - service: scene.reload
    data: {}
